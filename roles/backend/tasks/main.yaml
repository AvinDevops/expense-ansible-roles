- name: disable default nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs 20v
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.dnf:
    name: nodejs
    state: installed

- name: adding expense user
  ansible.builtin.user:
    name: expense

- name: run app pre-requisites
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req

# - name: create /app directory
#   ansible.builtin.file:
#     path: /app
#     state: directory

# - name: download backend zip file
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /tmp/backend.zip

# - name: unzip backend file
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip
#     dest: /app
#     remote_src: yes

- name: install npm dependencie
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: copy backend service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install mysql client
  ansible.builtin.dnf:
    name: mysql
    state: installed

- name: installing pip dependencie
  ansible.builtin.pip:
    name:
    - PyMySQL
    - Cryptography
    executable: pip3.9

- name: import data into mysql
  community.mysql.mysql_db:
    login_user: "{{login_user}}"
    login_password: "{{root_password}}"
    login_host: "{{login_host}}"
    state: import
    name: all
    target: /app/schema/backend.sql

- name: daemon reload
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: start and enable backend service
  ansible.builtin.service:
    name: backend
    state: started
    enabled: yes